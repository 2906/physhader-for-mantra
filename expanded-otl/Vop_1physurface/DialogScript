# Dialog script for physurface automatically generated 01/16/15 15:36:39

{
    name	physurface
    script	physurfaceIH
    label	PhySurface

    outercode {
	"#include <voptype.h>"
	"#include <phy/surface.h>"
    }

    code {
	"VOPstring $renderengine;"
	"renderstate(\"renderer:renderengine\", $renderengine);"
	""
	"VOPint $_styleSPC = $traceSPC * ($styleSPC + 1);"
	"VOPint $_styleTRN = $traceTRN * ($styleTRN + 1);"
	""
	"VOPfloat $_maxdist = $limitray ? $maxdist : -1.;"
	"VOPint $_vsamples = $enablesingle ? $vsamples : 0;"
	"VOPint $_dsamples = $dispersion ? $dsamples : 0;"
	"VOPint $_ssamples = $enablemulti ? $ssamples : 0;"
	""
	"VOPvector $_p = $isconnected_p ? $p : P;"
	"VOPnormal $_n = $isconnected_n ? $n : normalize(N);"
	"VOPvector $_i = $isconnected_i ? $i : I;"
	"VOPnormal $_tangent = $isconnected_tangent ? $tangent : normalize(dPds);"
	"VOPint $shadowray = isshadowray();"
	""
	"VOPvector $_sellmeierB = $sellmeierB;"
	"VOPvector $_sellmeierC = $sellmeierC;"
	"if ($material) get_sellmeier($material - 1, $_sellmeierB, $_sellmeierC);"
	""
	""
	"$beauty = .0;"
	"$opacity = .0;"
	""
	"physurface($conductor,"
	"           $thin,"
	"           $thickness,"
	"           $alb,"
	"           $clrsurf,"
	"           $ior,"
	"           $enableDFS, $enableSPC, $enableTRN, $enableSSS,"
	"           $weightDFS, $weightSPC, $weightTRN, $weightSSS,"
	"           $roughDFS, $roughSPC,"
	"           $anisobias,"
	"           $clrSSS,"
	"           $absty,"
	"           $g,"
	"           $_styleSPC, $_styleTRN,"
	"           $oblendSPC, $oblendTRN,"
	"           $squality,"
	"           $tsamples,"
	"           $_vsamples,"
	"           $_dsamples,"
	"           $_ssamples,"
	"           $empty,"
	"           $accurateabs,"
	"           $depthimp,"
	"           $_maxdist,"
	"           $_p,"
	"           $_n,"
	"           $_i,"
	"           $_tangent,"
	"           $_sellmeierB, $_sellmeierC,"
	"           $gvarSPC, $gvarTRN,"
	"           $sscope,"
	"           $beauty,"
	"           $opacity,"
	"           $all,"
	"           $f);"
    }

    input	vector	p	Position
    input	vector	n	Normal
    input	vector	i	"Incident Vector"
    input	vector	tangent	Tangent
    input	int	conductor	Metall
    input	int	thin	"Thin Object"
    input	float	thickness	Thickness
    input	float	alb	Albedo
    input	vector	ior	IOR
    input	vector	clrsurf	"Surface Color"
    input	int	enableDFS	"Enable Diffuse"
    input	float	weightDFS	"Diffuse Amount"
    input	float	roughDFS	"Diffuse Roughness"
    input	int	enableSPC	"Enable Specular"
    input	float	weightSPC	"Specular Amount"
    input	float	roughSPC	"Specular Roughness"
    input	float	anisobias	Anisotropy
    input	int	enableTRN	"Enable Transmission"
    input	float	weightTRN	Transmittance
    input	vector	absty	Absorptivity
    input	int	enableSSS	"Enable SSS"
    input	float	weightSSS	"SSS Amount"
    input	vector	clrSSS	Scattering
    input	float	g	Assymetry
    input	int	dispersion	"Enable Dispersion"
    input	int	material	Dispersion
    input	vector	sellmeierB	"Sellmeier Coefficients B"
    input	vector	sellmeierC	"Sellmeier Coefficients C"
    input	int	traceSPC	"Trace Reflection"
    input	int	styleSPC	"Reflection Style"
    input	string	gvarSPC	"Reflection Gather Variable"
    input	int	oblendSPC	"Reflection Opacity Blending"
    input	int	traceTRN	"Trace Refraction"
    input	int	styleTRN	"Refraction Style"
    input	string	gvarTRN	"Refraction Gather Variable"
    input	int	oblendTRN	"Refraction Opacity Blending"
    input	float	depthimp	"Depth Importance"
    input	int	squality	"Sampling Quality"
    input	int	tsamples	"Tracing Samples"
    input	int	accurateabs	"Accurate Absorption"
    input	int	limitray	"Limit Ray Distance"
    input	float	maxdist	"Max Ray Distance"
    input	int	empty	"Empty Object"
    input	int	dsamples	"Dispersion Samples"
    input	int	enablesingle	"Enable Single Scattering"
    input	int	vsamples	"Single Scattering Samples"
    input	int	enablemulti	"Enable Multiple Scattering"
    input	int	ssamples	"Multiple Scattering Samples"
    input	string	sscope	Scope
    output	vector	beauty	Color
    output	vector	opacity	Opacity
    output	vectora	all	All
    output	bsdf	f	BSDF
    inputflags	p	1
    inputflags	n	1
    inputflags	i	1
    inputflags	tangent	1
    inputflags	conductor	1
    inputflags	thin	1
    inputflags	thickness	1
    inputflags	alb	1
    inputflags	ior	1
    inputflags	clrsurf	0
    inputflags	enableDFS	1
    inputflags	weightDFS	1
    inputflags	roughDFS	0
    inputflags	enableSPC	1
    inputflags	weightSPC	1
    inputflags	roughSPC	0
    inputflags	anisobias	1
    inputflags	enableTRN	1
    inputflags	weightTRN	1
    inputflags	absty	1
    inputflags	enableSSS	1
    inputflags	weightSSS	1
    inputflags	clrSSS	0
    inputflags	g	1
    inputflags	dispersion	1
    inputflags	material	1
    inputflags	sellmeierB	1
    inputflags	sellmeierC	1
    inputflags	traceSPC	1
    inputflags	styleSPC	1
    inputflags	gvarSPC	1
    inputflags	oblendSPC	1
    inputflags	traceTRN	1
    inputflags	styleTRN	1
    inputflags	gvarTRN	1
    inputflags	oblendTRN	1
    inputflags	depthimp	1
    inputflags	squality	1
    inputflags	tsamples	1
    inputflags	accurateabs	1
    inputflags	limitray	1
    inputflags	maxdist	1
    inputflags	empty	1
    inputflags	dsamples	1
    inputflags	enablesingle	1
    inputflags	vsamples	1
    inputflags	enablemulti	1
    inputflags	ssamples	1
    inputflags	sscope	1
    signature	"Default Inputs"	default	{ vector vector vector vector int int float float vector vector int float float int float float float int float vector int float vector float int int vector vector int int string int int int string int float int int int int float int int int int int int string vector vector vectora bsdf }

    outputoverrides	default
    {
	___begin	auto
			(0,0,0)
	___begin	auto
			(0,0,0)
	___begin	auto
			(0)
	___begin	auto
			(0)
    }

    help {
	""
    }

    parm {
	name	"conductor"
	label	"Material Type"
	type	integer
	default	{ "0" }
	help	"A general material type."
	menu	{
	    "0"	"Dielectric"
	    "1"	"Conductor"
	}
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"thin"
	label	"Thin Plate"
	type	toggle
	nolabel
	joinnext
	default	{ "0" }
	help	"Treat shading object as a thin plate with specified thickness. If thickness not equal zero, the shader computes outgoing ray analytically."
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"thickness"
	label	"Thickness"
	type	float
	default	{ "0" }
	help	"Thickness of thin plate. Affects transmission and scattering."
	disablewhen	"{ thin == 0 }"
	range	{ 0 10 }
	export	none
    }
    parm {
	name	"alb"
	label	"Albedo"
	type	float
	default	{ "0.8" }
	help	"The maximum albedo of the surface."
	range	{ 0! 1! }
	export	none
    }
    parm {
	name	"ior"
	label	"IOR"
	type	vector
	size	3
	default	{ "1.46" "1" "3.4" }
	help	"The first value is a refractive index, real part of the complex IOR of the interior media, the second value is an index of the incident media (usually air), the third value is an extinction coefficient, an imaginary part of a complex IOR (conductors)."
	range	{ 0! 10 }
	export	none
    }
    parm {
	name	"clrsurf"
	label	"Surface Color"
	type	color
	size	3
	default	{ "1" "1" "1" }
	help	"The diffuse color for dielectrics or the specular color for conductors."
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"enableDFS"
	label	"Enable Diffuse"
	type	toggle
	nolabel
	joinnext
	default	{ "1" }
	help	"Enable diffuse reflection."
	disablewhen	"{ conductor == 1 }"
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"weightDFS"
	label	"Diffuse"
	type	float
	default	{ "1" }
	help	"The diffuse component weight."
	disablewhen	"{ conductor == 1 } { enableDFS == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"roughDFS"
	label	"Roughness"
	type	float
	default	{ "0" }
	help	"Oren-Nayar diffuse roughness."
	disablewhen	"{ conductor == 1 } { enableDFS == 0 }"
	hidewhen	"{ conductor == 1 } { enableDFS == 0 }"
	range	{ 0! 1! }
	export	none
    }
    parm {
	name	"enableSPC"
	label	"Enable Specular"
	type	toggle
	nolabel
	joinnext
	default	{ "1" }
	help	"Enable specular reflection."
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"weightSPC"
	label	"Specular"
	type	float
	default	{ "1" }
	help	"The specular reflection component weight."
	disablewhen	"{ enableSPC == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"roughSPC"
	label	"Roughness"
	type	float
	default	{ "0" }
	help	"Specular roughness. Also affects transmission."
	disablewhen	"{ enableSPC == 0 enableTRN == 0 }"
	hidewhen	"{ enableSPC == 0 enableTRN == 0 }"
	range	{ 0! 0.3 }
	export	none
    }
    parm {
	name	"anisobias"
	label	"Anisotropy"
	type	float
	default	{ "0" }
	help	"Anisotropy bias. Affects specular and transmission."
	disablewhen	"{ enableSPC == 0 enableTRN == 0 }"
	hidewhen	"{ enableSPC == 0 enableTRN == 0 }"
	range	{ -1! 1! }
	export	none
    }
    parm {
	name	"enableTRN"
	label	"Enable Transmission"
	type	toggle
	nolabel
	joinnext
	default	{ "0" }
	help	"Enable transmission."
	disablewhen	"{ conductor == 1 }"
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"weightTRN"
	label	"Transmittance"
	type	float
	default	{ "1" }
	help	"Transmittance."
	disablewhen	"{ conductor == 1 } { enableTRN == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"absty"
	label	"Absorptivity"
	type	color
	size	3
	default	{ "0.1" "0.1" "0.1" }
	help	"Absorption coefficient. Higher values produces darker result. Affects on transmission and SSS. If objects is thin threats as transmission color."
	disablewhen	"{ conductor == 1 } { enableTRN == 0 enableSSS == 0 }"
	hidewhen	"{ conductor == 1 } { enableTRN == 0 enableSSS == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"enableSSS"
	label	"Enable SSS"
	type	toggle
	nolabel
	joinnext
	default	{ "0" }
	help	"Enable multiple subsurface scattering. If transmission also on then you get only single scattering."
	disablewhen	"{ conductor == 1 }"
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"weightSSS"
	label	"SSS"
	type	float
	default	{ "1" }
	help	"Amount of light which will be scattered."
	disablewhen	"{ conductor == 1 } { enableSSS == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"clrSSS"
	label	"Scattering"
	type	color
	size	3
	default	{ "1" "1" "1" }
	help	"Scattering coefficient."
	disablewhen	"{ conductor == 1 } { enableSSS == 0 }"
	hidewhen	"{ conductor == 1 } { enableSSS == 0 }"
	range	{ 0! 1 }
	export	none
    }
    parm {
	name	"g"
	label	"Assymetry"
	type	float
	default	{ "0" }
	help	"Phase function parameter."
	disablewhen	"{ conductor == 1 } { enableSSS == 0 }"
	hidewhen	"{ conductor == 1 } { enableSSS == 0 }"
	range	{ -1! 1! }
	export	none
    }
    parm {
	name	"dispersion"
	label	"Enable Dispersion"
	type	toggle
	nolabel
	joinnext
	default	{ "0" }
	help	"Enable Dispersion."
	disablewhen	"{ enableTRN != 1 }"
	hidewhen	"{ enableTRN != 1 }"
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"material"
	label	"Dispersion"
	type	integer
	default	{ "0" }
	help	"Dispersion material. List of builtin coefficients for Sellmeier equation."
	disablewhen	"{ enableTRN != 1 } { dispersion != 1 }"
	hidewhen	"{ enableTRN != 1 }"
	menu	{
	    "0"	"Custom"
	    "1"	"Quartz"
	    "2"	"Sapphire"
	    "3"	"Diamond"
	    "4"	"BK7"
	    "5"	"SF10"
	    "6"	"F2"
	    "7"	"FK51A"
	    "8"	"LASF9"
	}
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"sellmeierB"
	label	"Sellmeier B"
	type	vector
	size	3
	default	{ "0.696166" "0.407943" "0.897479" }
	help	"B1, B2, B3 coefficients for Sellmeier equation."
	hidewhen	"{ enableTRN != 1 } { dispersion != 1 } { material != 0 }"
	range	{ -1 1 }
	export	none
    }
    parm {
	name	"sellmeierC"
	label	"Sellmeier C"
	type	vector
	size	3
	default	{ "0.0684043" "0.116241" "9.89616" }
	help	"C1, C2, C3 coefficients for Sellmeier equation."
	hidewhen	"{ enableTRN != 1 } { dispersion != 1 } { material != 0 }"
	range	{ -1 1 }
	export	none
    }
    group {
	name	"folder0"
	label	"Ray-Tracing"
	hidewhentab	"{ enableSPC == 0 enableTRN == 0 enableSSS == 0 }"

	parm {
	    name	"traceSPC"
	    label	"Trace Reflection"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	    disablewhen	"{ enableSPC == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"styleSPC"
	    label	"Reflection"
	    type	integer
	    joinnext
	    default	{ "0" }
	    help	"Tracing method of reflection."
	    disablewhen	"{ enableSPC == 0 } { traceSPC == 0 }"
	    menu	{
		"0"	"Gather"
		"1"	"Occlusion"
	    }
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"gvarSPC"
	    label	"Reflection Gather Variable"
	    type	string
	    nolabel
	    joinnext
	    default	{ "Cf" }
	    help	"Variable which will be used for reflection."
	    disablewhen	"{ enableSPC == 0 } { traceSPC == 0 } { styleSPC != 0 }"
	    menureplace	{
		"Cf"	"Color"
		"Of"	"Opacity"
		"Af"	"Alfa"
		"all_diffuse"	"Combined diffuse"
		"all_reflect"	"Combined reflect"
		"all_refract"	"Combined refract"
		"sss_multi"	"Multi scattering"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"oblendSPC"
	    label	"Opacity Blending"
	    type	toggle
	    default	{ "0" }
	    help	"Enable opacity blending."
	    disablewhen	"{ enableSPC == 0 } { traceSPC == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"traceTRN"
	    label	"Trace Refraction"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	    disablewhen	"{ conductor == 1 } { enableTRN == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"styleTRN"
	    label	"Refraction"
	    type	integer
	    joinnext
	    default	{ "0" }
	    help	"Tracing method of refraction."
	    disablewhen	"{ conductor == 1 } { enableTRN == 0 } { traceTRN == 0 }"
	    menu	{
		"0"	"Gather"
		"1"	"Occlusion"
	    }
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"gvarTRN"
	    label	"Refraction Gather Variable"
	    type	string
	    nolabel
	    joinnext
	    default	{ "Cf" }
	    help	"Variable which will be used for refraction."
	    disablewhen	"{ conductor == 1 } { enableTRN == 0 } { traceTRN == 0 } { styleTRN != 0 }"
	    menureplace	{
		"Cf"	"Color"
		"Of"	"Opacity"
		"Af"	"Alfa"
		"all_diffuse"	"Combined diffuse"
		"all_reflect"	"Combined reflect"
		"all_refract"	"Combined refract"
		"sss_multi"	"Multi scattering"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"oblendTRN"
	    label	"Opacity Blending"
	    type	toggle
	    default	{ "0" }
	    help	"Enable opacity blending."
	    disablewhen	"{ conductor == 1 } { enableTRN == 0 } { traceTRN == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"empty"
	    label	"Empty Object"
	    type	toggle
	    default	{ "0" }
	    disablewhen	"{ conductor == 1 } { enableTRN == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"squality"
	    label	"Sampling Quality"
	    type	integer
	    joinnext
	    default	{ "0" }
	    menu	{
		"0"	"Auto"
		"1"	"Minimum"
		"2"	"Maximum"
		"3"	"Custom"
	    }
	    range	{ 0! 3! }
	    export	none
	}
	parm {
	    name	"tsamples"
	    label	"Sample Count"
	    type	integer
	    nolabel
	    default	{ "32" }
	    disablewhen	"{ squality != 3 }"
	    range	{ 1! 64 }
	    export	none
	}
	parm {
	    name	"accurateabs"
	    label	"Accurate Absorption"
	    type	toggle
	    default	{ "0" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"depthimp"
	    label	"Depth Importance"
	    type	float
	    default	{ "0.5" }
	    range	{ 0! 1! }
	    export	none
	}
	parm {
	    name	"limitray"
	    label	"Limit Ray Distance"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "0" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"maxdist"
	    label	"Max Ray Distance"
	    type	float
	    default	{ "-1" }
	    disablewhen	"{ limitray == 0 }"
	    range	{ 0! 20 }
	    export	none
	}
	parm {
	    name	"dsamples"
	    label	"Dispersion Samples"
	    type	integer
	    default	{ "3" }
	    disablewhen	"{ dispersion != 1 }"
	    range	{ 2! 10 }
	    export	none
	}
    }

    group {
	name	"folder0_1"
	label	"SSS"
	hidewhentab	"{ conductor == 1 } { enableSSS == 0 } { thin == 1 }"

	parm {
	    name	"enablesingle"
	    label	"Enable Single Scattering"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	    disablewhen	"{ enableTRN == 0 enableSSS == 0 } { enableTRN == 0 }"
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"vsamples"
	    label	"Single Scattering Samples"
	    type	integer
	    default	{ "16" }
	    disablewhen	"{ enablesingle == 0 } { enableTRN == 0 enableSSS == 0 } { enableTRN == 0 }"
	    range	{ 1 100 }
	    export	none
	}
	parm {
	    name	"enablemulti"
	    label	"Multiple Scattering"
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"ssamples"
	    label	"Multiple Scattering"
	    type	integer
	    default	{ "16" }
	    disablewhen	"{ enablemulti == 0 }"
	    range	{ 1! 64 }
	    export	none
	}
	parm {
	    name	"sscope"
	    label	"Scope"
	    type	oplist
	    default	{ "scope:self" }
	    disablewhen	"{ enablemulti == 0 }"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "opfilter" "!!OBJ/GEOMETRY!!" }
	    parmtag	{ "oprelative" "/" }
	}
    }

}
